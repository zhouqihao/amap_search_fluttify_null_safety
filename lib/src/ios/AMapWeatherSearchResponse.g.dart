// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_search_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class AMapWeatherSearchResponse extends AMapSearchObject with NSCoding, NSCopying {
  //region constants
  static const String name__ = 'AMapWeatherSearchResponse';

  @override
  final String tag__ = 'amap_search_fluttify';

  
  //endregion

  //region creators
  static Future<AMapWeatherSearchResponse> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kAmapSearchFluttifyChannel.invokeMethod(
      'ObjectFactory::createAMapWeatherSearchResponse',
      {'init': init}
    );
    return AmapSearchFluttifyIOSAs<AMapWeatherSearchResponse>(__result__)!;
  }
  
  static Future<List<AMapWeatherSearchResponse>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kAmapSearchFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchAMapWeatherSearchResponse',
      {'length': length, 'init': init}
    );
    return __result_batch__!
        .map((it) => AmapSearchFluttifyIOSAs<AMapWeatherSearchResponse>(it)!)
        .toList();
  }
  
  //endregion

  //region getters
  Future<List<AMapLocalWeatherLive>?> get_lives() async {
    final __result__ = await kAmapSearchFluttifyChannel.invokeMethod("AMapWeatherSearchResponse::get_lives", {'__this__': this});
    return (__result__ as List?)!.map((it) => AmapSearchFluttifyIOSAs<AMapLocalWeatherLive>(it)!).toList();
  }
  
  Future<List<AMapLocalWeatherForecast>?> get_forecasts() async {
    final __result__ = await kAmapSearchFluttifyChannel.invokeMethod("AMapWeatherSearchResponse::get_forecasts", {'__this__': this});
    return (__result__ as List?)!.map((it) => AmapSearchFluttifyIOSAs<AMapLocalWeatherForecast>(it)!).toList();
  }
  
  //endregion

  //region setters
  Future<void> set_lives(List<AMapLocalWeatherLive> lives) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapWeatherSearchResponse::set_lives', <String, dynamic>{'__this__': this, "lives": lives});
  
  
  }
  
  Future<void> set_forecasts(List<AMapLocalWeatherForecast> forecasts) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapWeatherSearchResponse::set_forecasts', <String, dynamic>{'__this__': this, "forecasts": forecasts});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'AMapWeatherSearchResponse{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension AMapWeatherSearchResponse_Batch on List<AMapWeatherSearchResponse?> {
  //region getters
  Future<List<List<AMapLocalWeatherLive>?>?> get_lives_batch() async {
    final resultBatch = await kAmapSearchFluttifyChannel.invokeMethod("AMapWeatherSearchResponse::get_lives_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List?)!.map((__result__) => (__result__ as List?)!.map((it) => AmapSearchFluttifyIOSAs<AMapLocalWeatherLive>(it)!).toList()).cast<List<AMapLocalWeatherLive>?>().toList();
  }
  
  Future<List<List<AMapLocalWeatherForecast>?>?> get_forecasts_batch() async {
    final resultBatch = await kAmapSearchFluttifyChannel.invokeMethod("AMapWeatherSearchResponse::get_forecasts_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List?)!.map((__result__) => (__result__ as List?)!.map((it) => AmapSearchFluttifyIOSAs<AMapLocalWeatherForecast>(it)!).toList()).cast<List<AMapLocalWeatherForecast>?>().toList();
  }
  
  //endregion

  //region setters
  Future<void> set_lives_batch(List<List<AMapLocalWeatherLive>> lives) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapWeatherSearchResponse::set_lives_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "lives": lives[__i__]}]);
  
  
  }
  
  Future<void> set_forecasts_batch(List<List<AMapLocalWeatherForecast>> forecasts) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapWeatherSearchResponse::set_forecasts_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "forecasts": forecasts[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}