// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_search_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class AMapCloudSearchBaseRequest extends AMapSearchObject with NSCoding, NSCopying {
  //region constants
  static const String name__ = 'AMapCloudSearchBaseRequest';

  @override
  final String tag__ = 'amap_search_fluttify';

  
  //endregion

  //region creators
  static Future<AMapCloudSearchBaseRequest> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kAmapSearchFluttifyChannel.invokeMethod(
      'ObjectFactory::createAMapCloudSearchBaseRequest',
      {'init': init}
    );
    return AmapSearchFluttifyIOSAs<AMapCloudSearchBaseRequest>(__result__)!;
  }
  
  static Future<List<AMapCloudSearchBaseRequest>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kAmapSearchFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchAMapCloudSearchBaseRequest',
      {'length': length, 'init': init}
    );
    return __result_batch__!
        .map((it) => AmapSearchFluttifyIOSAs<AMapCloudSearchBaseRequest>(it)!)
        .toList();
  }
  
  //endregion

  //region getters
  Future<String?> get_tableID() async {
    final __result__ = await kAmapSearchFluttifyChannel.invokeMethod("AMapCloudSearchBaseRequest::get_tableID", {'__this__': this});
    return __result__;
  }
  
  Future<List<String>?> get_filter() async {
    final __result__ = await kAmapSearchFluttifyChannel.invokeMethod("AMapCloudSearchBaseRequest::get_filter", {'__this__': this});
    return (__result__ as List?)!.cast<String>();
  }
  
  Future<String?> get_sortFields() async {
    final __result__ = await kAmapSearchFluttifyChannel.invokeMethod("AMapCloudSearchBaseRequest::get_sortFields", {'__this__': this});
    return __result__;
  }
  
  Future<AMapCloudSortType?> get_sortType() async {
    final __result__ = await kAmapSearchFluttifyChannel.invokeMethod("AMapCloudSearchBaseRequest::get_sortType", {'__this__': this});
    return (__result__ as int).toAMapCloudSortType();
  }
  
  Future<int?> get_offset() async {
    final __result__ = await kAmapSearchFluttifyChannel.invokeMethod("AMapCloudSearchBaseRequest::get_offset", {'__this__': this});
    return __result__;
  }
  
  Future<int?> get_page() async {
    final __result__ = await kAmapSearchFluttifyChannel.invokeMethod("AMapCloudSearchBaseRequest::get_page", {'__this__': this});
    return __result__;
  }
  
  //endregion

  //region setters
  Future<void> set_tableID(String tableID) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapCloudSearchBaseRequest::set_tableID', <String, dynamic>{'__this__': this, "tableID": tableID});
  
  
  }
  
  Future<void> set_filter(List<String> filter) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapCloudSearchBaseRequest::set_filter', <String, dynamic>{'__this__': this, "filter": filter});
  
  
  }
  
  Future<void> set_sortFields(String sortFields) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapCloudSearchBaseRequest::set_sortFields', <String, dynamic>{'__this__': this, "sortFields": sortFields});
  
  
  }
  
  Future<void> set_sortType(AMapCloudSortType sortType) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapCloudSearchBaseRequest::set_sortType', <String, dynamic>{'__this__': this, "sortType": sortType.toValue()});
  
  
  }
  
  Future<void> set_offset(int offset) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapCloudSearchBaseRequest::set_offset', <String, dynamic>{'__this__': this, "offset": offset});
  
  
  }
  
  Future<void> set_page(int page) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapCloudSearchBaseRequest::set_page', <String, dynamic>{'__this__': this, "page": page});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'AMapCloudSearchBaseRequest{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension AMapCloudSearchBaseRequest_Batch on List<AMapCloudSearchBaseRequest?> {
  //region getters
  Future<List<String?>?> get_tableID_batch() async {
    final resultBatch = await kAmapSearchFluttifyChannel.invokeMethod("AMapCloudSearchBaseRequest::get_tableID_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List?)!.map((__result__) => __result__).cast<String?>().toList();
  }
  
  Future<List<List<String>?>?> get_filter_batch() async {
    final resultBatch = await kAmapSearchFluttifyChannel.invokeMethod("AMapCloudSearchBaseRequest::get_filter_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List?)!.map((__result__) => (__result__ as List?)!.cast<String>()).cast<List<String>?>().toList();
  }
  
  Future<List<String?>?> get_sortFields_batch() async {
    final resultBatch = await kAmapSearchFluttifyChannel.invokeMethod("AMapCloudSearchBaseRequest::get_sortFields_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List?)!.map((__result__) => __result__).cast<String?>().toList();
  }
  
  Future<List<AMapCloudSortType?>?> get_sortType_batch() async {
    final resultBatch = await kAmapSearchFluttifyChannel.invokeMethod("AMapCloudSearchBaseRequest::get_sortType_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List?)!.map((__result__) => (__result__ as int).toAMapCloudSortType()).cast<AMapCloudSortType?>().toList();
  }
  
  Future<List<int?>?> get_offset_batch() async {
    final resultBatch = await kAmapSearchFluttifyChannel.invokeMethod("AMapCloudSearchBaseRequest::get_offset_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List?)!.map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<int?>?> get_page_batch() async {
    final resultBatch = await kAmapSearchFluttifyChannel.invokeMethod("AMapCloudSearchBaseRequest::get_page_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List?)!.map((__result__) => __result__).cast<int?>().toList();
  }
  
  //endregion

  //region setters
  Future<void> set_tableID_batch(List<String> tableID) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapCloudSearchBaseRequest::set_tableID_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "tableID": tableID[__i__]}]);
  
  
  }
  
  Future<void> set_filter_batch(List<List<String>> filter) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapCloudSearchBaseRequest::set_filter_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "filter": filter[__i__]}]);
  
  
  }
  
  Future<void> set_sortFields_batch(List<String> sortFields) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapCloudSearchBaseRequest::set_sortFields_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "sortFields": sortFields[__i__]}]);
  
  
  }
  
  Future<void> set_sortType_batch(List<AMapCloudSortType> sortType) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapCloudSearchBaseRequest::set_sortType_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "sortType": sortType[__i__].toValue()}]);
  
  
  }
  
  Future<void> set_offset_batch(List<int> offset) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapCloudSearchBaseRequest::set_offset_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "offset": offset[__i__]}]);
  
  
  }
  
  Future<void> set_page_batch(List<int> page) async {
    await kAmapSearchFluttifyChannel.invokeMethod('AMapCloudSearchBaseRequest::set_page_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "page": page[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}